  # -*- coding: utf-8 -*-
import scrapy


class JobsSpider(scrapy.Spider):
    name = "jobs"
    allowed_domains = ["seattle.craigslist.org"]
    start_urls = (
        'http://seattle.craigslist.org/d/bicycles/search/bia',
    )

    def parse(self, response):
        listings = response.xpath('//li[@class="result-row"]')
        for listing in listings:
            date = listing.xpath('.//*[@class="result-date"]/@datetime').extract_first()
            link = listing.xpath('.//a[@class="result-title hdrlnk"]/@href').extract_first()
            text = listing.xpath('.//a[@class="result-title hdrlnk"]/text()').extract_first()

            yield scrapy.Request(link,
                                 callback=self.parse_listing,
                                 meta={'date': date,
                                       'link': link,
                                       'text': text})

        next_page_url = response.xpath('//a[text()="next > "]/@href').extract_first()
        if next_page_url:
            yield scrapy.Request(response.urljoin(next_page_url), callback=self.parse)

    def parse_listing(self, response):
        date = response.meta['date']
        link = response.meta['link']
        text = response.meta['text']

        frame_mat = response.xpath('//*[@class="attrgroup"]/span[1]/b/text()').extract_first()
        type = response.xpath('//*[@class="attrgroup"]/span[2]/b/text()').extract_first()
        brake = response.xpath('//*[@class="attrgroup"]/span[3]/b/text()').extract_first()
        condition = response.xpath('//*[@class="attrgroup"]/span[4]/b/text()').extract_first()
        electric = response.xpath('//*[@class="attrgroup"]/span[5]/b/text()').extract_first()
        frame = response.xpath('//*[@class="attrgroup"]/span[6]/b/text()').extract_first()
        bar = response.xpath('//*[@class="attrgroup"]/span[7]/b/text()').extract_first()
        make = response.xpath('//*[@class="attrgroup"]/span[8]/b/text()').extract_first()
        suspension = response.xpath('//*[@class="attrgroup"]/span[9]/b/text()').extract_first()
        wheel = response.xpath('//*[@class="attrgroup"]/span[10]/b/text()').extract_first()

        images = response.xpath('//*[@id="thumbs"]//@src').extract()
        images = [image.replace('50x50c', '600x450') for image in images]

        loc = response.xpath('.//p[@class="mapaddress"]/small/a/@href').extract_first()

        yield {'date': date,
               'link': link,
               'text': text,
               'frame_mat': frame_mat,
               'type': type,
               'brake': brake,
               'condition': condition,
               'electric': electric,
               'frame': frame,
               'bar': bar,
               'make': make,
               'suspension': suspension,
               'wheel': wheel,
               'images': images,
               'loc': loc}
